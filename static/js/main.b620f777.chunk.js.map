{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Hooks/HttpRequests.js","Components/Cards.js","Hooks/calculateISODate.js","Components/GradientCards.js","Hooks/SimplifyDate.js","Views/Home.js","Views/About.js","Views/Product.js","Views/Overview.js","Views/Map.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Loader","useAxiosGet","url","loading","data","error","request","setRequest","useEffect","axios","get","then","response","catch","Cards","console","log","summary","content","Countries","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","calculateISO","date","timezoneOffset","getMinutes","getTimezoneOffset","timestamp","getTime","correctDate","Date","setUTCHours","toISOString","split","GradientCards","length","Active","Confirmed","Deaths","Recovered","SimplifyDate","d","month","getMonth","day","getDate","year","getFullYear","join","Home","React","chartData","setChartData","startDate","endDate","calendar","setCalendar","products","dynamicData","cases","res","i","push","Cases","labels","datasets","label","backgroundColor","borderWidth","chart","href","editableDateInputs","onChange","selection","moveRangeOnFirstSelection","ranges","About","Product","id","useParams","product","name","src","images","imageUrl","alt","price","description","Overview","Global","Map","setMap","onLoad","useCallback","onUnmount","setMarkers","e","current","lat","latLng","lng","time","googleMapsApiKey","process","mapContainerStyle","width","height","margin","center","zoom","marker","Lat","Lon","Number","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b620f777.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nfunction NavigationMenu(props){\n    return (\n        <div>\n            <div className=\"font-bold py-3\">\n                Covid-19 Overview\n            </div>\n            <ul>\n                <li>\n                    <Link \n                        to=\"/\" \n                        className=\"text-blue-500 py-3 border-t border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Home\n                    </Link>\n                </li>\n                <li>\n                    <Link \n                        to=\"/about\" \n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        About\n                    </Link>\n                </li>\n                {/*<li>*/}\n                {/*    <Link*/}\n                {/*        to=\"/overview\"*/}\n                {/*        className=\"text-blue-500 py-3 border-b block\"*/}\n                {/*        onClick={props.closeMenu}*/}\n                {/*    >*/}\n                {/*        Overview*/}\n                {/*    </Link>*/}\n                {/*</li>*/}\n                <li>\n                    <Link\n                        to=\"/map\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Map\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default NavigationMenu","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport {useTransition, animated} from 'react-spring'\nimport NavigationMenu from './NavigationMenu'\n  \n\nfunction Navigation(){\n    const [showMenu, setShowMenu] = useState(false)\n\n    const maskTransitions = useTransition(showMenu, null, {\n        from: { position: 'absolute', opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    const menuTransitions = useTransition(showMenu, null, {\n        from: { opacity: 0, transform: 'translateX(-100%)' },\n        enter: { opacity: 1, transform: 'translateX(0%)' },\n        leave: { opacity: 0, transform: 'translateX(-100%)' },\n    })\n\n    return (\n        <nav>\n            <span className=\"text-xl\">\n                <FontAwesomeIcon \n                    icon={faBars}\n                    onClick={() => setShowMenu(!showMenu)}\n                />\n            </span>\n\n            {\n                maskTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key={key} \n                        style={props}\n                        className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\n                        onClick={() => setShowMenu(false)}\n                    >\n                    </animated.div>\n                )\n            }\n\n            {\n                menuTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key={key} \n                        style={props}\n                        className=\"fixed bg-white top-0 left-0 sidebarWidth h-full z-50 shadow p-3\"\n                    >\n                        <NavigationMenu \n                            closeMenu={() => setShowMenu(false)}\n                        />\n                    </animated.div>\n                )\n            }\n        </nav>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport Navigation from './Navigation'\nimport {Link} from 'react-router-dom'\n\nfunction Header(){\n    return (\n        <header className=\"border-b p-3 flex justify-between items-center\">\n            <Link to=\"/\" className=\"font-bold\">\n                Covid-19 Overview in Malaysia\n            </Link>\n\n            <Navigation />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nfunction Footer(){\n    return (\n        <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full border-t\">\n            &copy; Copyright 2020\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction Loader(){\n    return (\n        <div className=\"flex justify-center\">\n            <div className=\"loader\"></div>\n        </div>\n    )\n}\n\nexport default Loader","import {useEffect, useState} from 'react'\nimport axios from 'axios'\n\nexport function useAxiosGet(url){\n    const [request, setRequest] = useState({\n        loading: false,\n        data: null,\n        error: false\n    })\n\n    useEffect(() => {\n        setRequest({\n            loading: true,\n            data: null,\n            error: false\n        })\n        axios.get(url)\n            .then(response => {\n                setRequest({\n                    loading: false,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(() => {\n                setRequest({\n                    loading: false,\n                    data: null,\n                    error: true\n                })\n            })\n    }, [url])\n\n    return request\n}\n","import React from 'react'\r\n\r\nfunction Cards(props){\r\n    console.log(props.summary);\r\n    let content = null;\r\n    if (props.summary) {\r\n        let data = props.summary.Countries[104];\r\n        content =\r\n            <div className=\"row m-t-25\">\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewConfirmed}</h2>\r\n                                    <span>New Confirmed</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewDeaths}</h2>\r\n                                    <span>New Deaths</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewRecovered}</h2>\r\n                                    <span>New Recovered</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalConfirmed}</h2>\r\n                                    <span>Total Confirmed</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalDeaths}</h2>\r\n                                    <span>Total Death</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalRecovered}</h2>\r\n                                    <span>Total Recovered</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n    return (\r\n        <div className=\"bg-gray-100\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","export function calculateISO(date){\r\n    var timezoneOffset = date.getMinutes() + date.getTimezoneOffset();\r\n    var timestamp = date.getTime() + timezoneOffset * 1000;\r\n    var correctDate = new Date(timestamp);\r\n\r\n    correctDate.setUTCHours(0, 0, 0, 0);\r\n\r\n    return correctDate.toISOString().split('.')[0]+\"Z\";\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction GradientCards(props){\r\n    // <div>\r\n    //     <p>Active : {dynamicData.data[dynamicData.data.length - 1].Active}</p>\r\n    //     <p>Confirmed : {dynamicData.data[dynamicData.data.length - 1].Confirmed}</p>\r\n    //     <p>Deaths : {dynamicData.data[dynamicData.data.length - 1].Deaths}</p>\r\n    //     <p>Recovered : {dynamicData.data[dynamicData.data.length - 1].Recovered}</p>\r\n    // </div>\r\n    console.log(props);\r\n    let content = null;\r\n    if (props.data) {\r\n        let data = props.data[props.data.length - 1];\r\n        content =\r\n            <div className=\"row m-t-25\">\r\n                <div className=\"col-sm-6 col-lg-3\">\r\n                    <div className=\"overview-item overview-item--c2\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"gradCard\">\r\n                                    <h2>{data.Active}</h2>\r\n                                    <span>Active</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-3\">\r\n                    <div className=\"overview-item overview-item--c4\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"gradCard\">\r\n                                    <h2>{data.Confirmed}</h2>\r\n                                    <span>Confirmed</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-3\">\r\n                    <div className=\"overview-item overview-item--c3\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"gradCard\">\r\n                                    <h2>{data.Deaths}</h2>\r\n                                    <span>Deaths</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-3\">\r\n                    <div className=\"overview-item overview-item--c2\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"gradCard\">\r\n                                    <h2>{data.Recovered}</h2>\r\n                                    <span>Recovered</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GradientCards","export function SimplifyDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [day, month, year].join('/');\r\n}","import React from 'react'\nimport Loader from '../Components/Loader'\nimport { useAxiosGet } from '../Hooks/HttpRequests'\nimport Cards from \"../Components/Cards\";\nimport axios from \"axios\";\nimport {Line, Bar} from \"react-chartjs-2\";\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { DateRange } from 'react-date-range';\nimport {calculateISO} from \"../Hooks/calculateISODate\";\nimport GradientCards from \"../Components/GradientCards\";\nimport {SimplifyDate} from \"../Hooks/SimplifyDate\";\n\nfunction Home(){\n    const url = `https://api.covid19api.com/summary`;\n    const [chartData, setChartData] = React.useState({});\n    const [calendar, setCalendar] = React.useState([\n        {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: 'selection'\n        }\n    ]);\n    let products = useAxiosGet(url);\n    const urlWIthDate = `https://api.covid19api.com/country/malaysia?from=${calculateISO(calendar[0].startDate)}&to=${calculateISO(calendar[0].endDate)}`\n    let dynamicData = useAxiosGet(urlWIthDate);\n\n\n    const chart = () => {\n        let day = [];\n        let cases = [];\n        axios\n            .get(\"https://api.covid19api.com/country/malaysia/status/confirmed?from=2020-03-25T00:00:00Z&to=2020-10-10T00:00:00Z\")\n            .then(res => {\n                let formattedDate;\n                res.data.map((item, i) => {\n                    day.push(SimplifyDate(item.Date));\n                    cases.push(item.Cases);\n                })\n            })\n\n        setChartData({\n            labels: day,\n            datasets: [\n                {\n                    label: \"Total Confirmed cases\",\n                    data: cases,\n                    backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n                    borderWidth: 4\n                }\n            ]\n        });\n    }\n\n    React.useEffect(() => {\n        chart();\n    }, []);\n\n    let content = null\n\n    if(products.error){\n        content = <div>\n            <div className=\"bg-blue-300 mb-2 p-3\">\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\n            </div>\n            <div className=\"bg-red-300 p-3\">\n                There was an error please refresh or try again later.\n            </div>\n        </div>\n    }\n\n    if(products.loading){\n        content = <Loader></Loader>\n    }\n\n    if(products.data){\n        content =\n            <>\n                <div className=\"container pb-5\">\n                    <Cards summary={products.data}/>\n                </div>\n                <div className=\"border-b pb-5 border-t pt-5\">\n                    <Line data={chartData}/>\n                </div>\n                <div className=\"row m-t-25 pt-5\">\n                    <div className=\"col-sm-6 col-lg-4 text-center\">\n                        <DateRange\n                            editableDateInputs={true}\n                            onChange={item => setCalendar([item.selection])}\n                            moveRangeOnFirstSelection={false}\n                            ranges={calendar}\n                        />\n                    </div>\n                    <div className=\"col-sm-6 col-lg-8\">\n                        <div className=\"pb-2 fa-w-2\">\n                            Showing the result from <b>{SimplifyDate(calendar[0].startDate) + \" until \"+SimplifyDate(calendar[0].endDate)}</b>\n                        </div>\n                        {dynamicData.data ? (<GradientCards data={dynamicData.data}/>) : (<Loader></Loader>)}\n                    </div>\n                </div>\n            </>\n    }\n    return (\n        <div>\n            { content }\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction About(){\n    return (\n        <div className=\"\">\n            <h1 className=\"font-bold text-2xl mb-3\">Contact us</h1>\n            <p>\n                Created by Syed Ikhwan\n            </p>\n            <p>khusayni@gmail.com</p>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport Loader from '../Components/Loader'\nimport { useAxiosGet } from '../Hooks/HttpRequests'\n\nfunction Product(){\n    const { id } = useParams()\n    // Create your own Mock API: https://mockapi.io/\n    const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products/${id}`\n    \n    let product = useAxiosGet(url)\n\n    let content = null\n\n    if(product.error){\n        content = <div>\n            <div className=\"bg-blue-300 mb-2 p-3\">\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\n            </div>\n            <div className=\"bg-red-300 p-3\">\n                There was an error please refresh or try again later.\n            </div>\n        </div>\n    }\n\n    if(product.loading){\n        content = <Loader></Loader>\n    }\n\n    if(product.data){\n        content = \n        <div>\n            <h1 className=\"text-2xl font-bold mb-3\">\n                {product.data.name}\n            </h1>\n            <div>\n                <img\n                    src={product.data.images[0].imageUrl}\n                    alt={product.data.name}\n                />\n            </div>\n            <div className=\"font-bold text-xl mb-3\">\n                $ {product.data.price}\n            </div>\n            <div>\n                {product.data.description}\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"container mx-auto\">\n            {content}\n        </div>\n    )\n}\n\nexport default Product","import React from 'react'\r\nimport {useAxiosGet} from \"../Hooks/HttpRequests\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nfunction Overview() {\r\n    const url = \"https://api.covid19api.com/summary\";\r\n    const [chartData, setChartData] = React.useState({});\r\n\r\n    let summary = useAxiosGet(url)\r\n    console.log(summary)\r\n    let content = null\r\n\r\n    if(summary.error){\r\n        content = <div>\r\n                    <div className=\"bg-blue-300 mb-2 p-3\">\r\n                        If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n                    </div>\r\n                    <div className=\"bg-red-300 p-3\">\r\n                        There was an error please refresh or try again later.\r\n                    </div>\r\n                </div>\r\n    }\r\n\r\n    if(summary.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(summary.data){\r\n        content =\r\n            <div className=\"container mx-auto\">\r\n                <div>Global</div>\r\n                <div>New Confirmed : {summary.data.Global.NewConfirmed}</div>\r\n                <div>New Deaths : {summary.data.Global.NewDeaths}</div>\r\n                <div>New Recovered : {summary.data.Global.NewRecovered}</div>\r\n                <div>Total Confirmed : {summary.data.Global.TotalConfirmed}</div>\r\n                <div>Total Deaths : {summary.data.Global.TotalDeaths}</div>\r\n                <div>Total Recovered : {summary.data.Global.TotalRecovered}</div>\r\n\r\n                <div>Malaysia</div>\r\n                <div>New Confirmed : {summary.data.Countries[104].NewConfirmed}</div>\r\n                <div>New Deaths : {summary.data.Countries[104].NewDeaths}</div>\r\n                <div>New Recovered : {summary.data.Countries[104].NewRecovered}</div>\r\n                <div>Total Confirmed : {summary.data.Countries[104].TotalConfirmed}</div>\r\n                <div>Total Deaths : {summary.data.Countries[104].TotalDeaths}</div>\r\n                <div>Total Recovered : {summary.data.Countries[104].TotalRecovered}</div>\r\n            <div>\r\n                <Line data={chartData}/>\r\n            </div>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview","import React from 'react'\r\nimport {useAxiosGet} from \"../Hooks/HttpRequests\";\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\nimport MapStyles from \"../Components/MapStyles\";\r\nimport { Marker } from '@react-google-maps/api';\r\n\r\nfunction Map() {\r\n    const containerStyle = {\r\n        width: '90vw',\r\n        height: '90vh',\r\n        margin: \"auto\",\r\n    };\r\n\r\n    const center = {\r\n        lat: 4.2105,\r\n        lng: 101.9758\r\n    };\r\n\r\n    const position = {\r\n        lat: 3.1390,\r\n        lng: 101.6869\r\n    }\r\n\r\n    const options = {\r\n        styles : MapStyles,\r\n        disableDefaultUI: true,\r\n        zoomControl: true\r\n    }\r\n\r\n    const url = \"https://api.covid19api.com/country/malaysia/status/confirmed/live?from=2020-03-01T00:00:00Z&to=2020-04-10T00:00:00Z\";\r\n\r\n    let summary = useAxiosGet(url)\r\n    console.log(summary)\r\n    let content = null\r\n\r\n    const [map, setMap] = React.useState(null)\r\n\r\n    const onLoad = React.useCallback(function callback(map) {\r\n        // const bounds = new window.google.maps.LatLngBounds();\r\n        // map.fitBounds(bounds);\r\n        setMap(map)\r\n    }, [])\r\n\r\n    const onUnmount = React.useCallback(function callback(map) {\r\n        setMap(null)\r\n    }, [])\r\n\r\n    const [markers, setMarkers] = React.useState([]);\r\n    const onMapClick = React.useCallback((e) => {\r\n        setMarkers((current) => [\r\n            ...current,\r\n            {\r\n                lat: e.latLng.lat(),\r\n                lng: e.latLng.lng(),\r\n                time: new Date(),\r\n            },\r\n        ]);\r\n    }, []);\r\n\r\n    React.useState(() => {\r\n        setMarkers( () => [\r\n            {\r\n                lat: 3.8126,\r\n                lng: 103.3256\r\n            },\r\n            {\r\n                lat: 2.1896,\r\n                lng: 102.2501\r\n            },\r\n            {\r\n                lat: 1.4854,\r\n                lng: 103.7618\r\n            },\r\n            {\r\n                lat: 5.3117,\r\n                lng: 103.1324\r\n            }]);\r\n    });\r\n\r\n    // if(summary.error){\r\n    //     content = <div>\r\n    //         <div className=\"bg-blue-300 mb-2 p-3\">\r\n    //             If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n    //         </div>\r\n    //         <div className=\"bg-red-300 p-3\">\r\n    //             There was an error please refresh or try again later.\r\n    //         </div>\r\n    //     </div>\r\n    // }\r\n\r\n    // if(summary.loading){\r\n    //     content = <Loader></Loader>\r\n    // }\r\n\r\n    console.log(summary.data)\r\n    if(summary.data){\r\n        content =\r\n            <div>\r\n            <LoadScript\r\n                googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={8}\r\n                    onLoad={onLoad}\r\n                    onUnmount={onUnmount}\r\n                    // options={options}\r\n                >\r\n                    { /* Child components, such as markers, info windows, etc. */ }\r\n                    {/*<Marker*/}\r\n                    {/*    onLoad={onLoad}*/}\r\n                    {/*    position={position}*/}\r\n                    {/*/>*/}\r\n\r\n                    {summary.data.map((marker) => (\r\n                        <Marker\r\n                            key={`${marker.Lat}-${marker.Lon}-${marker.Date}`}\r\n                            position={{ lat: Number(marker.Lat), lng: Number(marker.Lon) }}\r\n                            onClick={() => {\r\n                                // setSelected(marker);\r\n                            }}\r\n                            onLoad={onLoad}\r\n                        />\r\n                    ))}\r\n\r\n                </GoogleMap>\r\n            </LoadScript>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport Home from './Views/Home'\nimport About from './Views/About'\nimport Product from './Views/Product'\nimport Overview from \"./Views/Overview\";\nimport Map from \"./Views/Map\";\n\nfunction App() {\n  return (\n    <div className=\"relative pb-10 min-h-screen\">\n      <Router>\n        \n        <Header />\n\n        <div className=\"p-3\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/products/:id\">\n            <Product />\n          </Route>\n          <Route path=\"/overview\">\n            <Overview />\n          </Route>\n          <Route path=\"/map\">\n            <Map />\n          </Route>\n        </Switch>\n        </div>\n\n        <Footer />\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport './theme.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}