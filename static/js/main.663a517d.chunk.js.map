{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Components/ProductCard.js","Hooks/HttpRequests.js","Components/Cards.js","Views/Home.js","Views/About.js","Views/Product.js","Views/Overview.js","Views/Map.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Loader","ProductCard","useAxiosGet","url","loading","data","error","request","setRequest","useEffect","axios","get","then","response","catch","Cards","console","log","summary","content","Countries","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","Home","React","chartData","setChartData","products","day","cases","res","i","push","Date","toUTCString","Cases","labels","datasets","label","backgroundColor","borderWidth","chart","href","About","Product","id","useParams","product","name","src","images","imageUrl","alt","price","description","Overview","Global","Map","setMap","onLoad","useCallback","onUnmount","setMarkers","e","current","lat","latLng","lng","time","googleMapsApiKey","process","mapContainerStyle","width","height","center","zoom","marker","Lat","Lon","Number","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.663a517d.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nfunction NavigationMenu(props){\n    return (\n        <div>\n            <div className=\"font-bold py-3\">\n                AppName\n            </div>\n            <ul>\n                <li>\n                    <Link \n                        to=\"/\" \n                        className=\"text-blue-500 py-3 border-t border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Home\n                    </Link>\n                </li>\n                <li>\n                    <Link \n                        to=\"/about\" \n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        About\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/overview\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Overview\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/map\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Map\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default NavigationMenu","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport {useTransition, animated} from 'react-spring'\nimport NavigationMenu from './NavigationMenu'\n  \n\nfunction Navigation(){\n    const [showMenu, setShowMenu] = useState(false)\n\n    const maskTransitions = useTransition(showMenu, null, {\n        from: { position: 'absolute', opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n\n    const menuTransitions = useTransition(showMenu, null, {\n        from: { opacity: 0, transform: 'translateX(-100%)' },\n        enter: { opacity: 1, transform: 'translateX(0%)' },\n        leave: { opacity: 0, transform: 'translateX(-100%)' },\n    })\n\n    return (\n        <nav>\n            <span className=\"text-xl\">\n                <FontAwesomeIcon \n                    icon={faBars}\n                    onClick={() => setShowMenu(!showMenu)}\n                />\n            </span>\n\n            {\n                maskTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key={key} \n                        style={props}\n                        className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\n                        onClick={() => setShowMenu(false)}\n                    >\n                    </animated.div>\n                )\n            }\n\n            {\n                menuTransitions.map(({ item, key, props }) =>\n                    item && \n                    <animated.div \n                        key={key} \n                        style={props}\n                        className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\n                    >\n                        <NavigationMenu \n                            closeMenu={() => setShowMenu(false)}\n                        />\n                    </animated.div>\n                )\n            }\n        </nav>\n    )\n}\n\nexport default Navigation","import React from 'react'\nimport Navigation from './Navigation'\nimport {Link} from 'react-router-dom'\n\nfunction Header(){\n    return (\n        <header className=\"border-b p-3 flex justify-between items-center\">\n            <Link to=\"/\" className=\"font-bold\">\n                Covid-19 Overview\n            </Link>\n\n            <Navigation />\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nfunction Footer(){\n    return (\n        <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full border-t\">\n            &copy; Copyright 2020\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction Loader(){\n    return (\n        <div className=\"flex justify-center\">\n            <div className=\"loader\"></div>\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction ProductCard(props){\n    return (\n        <div className=\"border mb-4 rounded overflow-hidden\">\n            <Link to={`/products/${props.product.id}`}>\n                <div \n                    style={{\n                        'backgroundImage': `url('${props.product.images[0].imageUrl}')`,\n                    }}\n                    className=\"w-full h-64 bg-blue bg-cover\"\n                >\n                </div>\n            </Link>\n            <div className=\"p-3\">\n                <h3 className=\"font-bold text-xl mb-3\">\n                    <Link to={`/products/${props.product.id}`}>\n                        { props.product.name }\n                    </Link>    \n                </h3>\n                <div className=\"font-bold mb-3\">\n                    $ { props.product.price }\n                </div>\n                <div className=\"mb-3\">\n                    { props.product.description }\n                </div>\n                <Link \n                    to={`/products/${props.product.id}`}\n                    className=\"bg-blue-500 text-white p-2 flex justify-center w-full\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductCard","import {useEffect, useState} from 'react'\nimport axios from 'axios'\n\nexport function useAxiosGet(url){\n    const [request, setRequest] = useState({\n        loading: false,\n        data: null,\n        error: false\n    })\n\n    useEffect(() => {\n        setRequest({\n            loading: true,\n            data: null,\n            error: false\n        })\n        axios.get(url)\n            .then(response => {\n                setRequest({\n                    loading: false,\n                    data: response.data,\n                    error: false\n                })\n            })\n            .catch(() => {\n                setRequest({\n                    loading: false,\n                    data: null,\n                    error: true\n                })\n            })\n    }, [url])\n\n    return request\n}\n","import React from 'react'\r\n\r\nfunction Cards(props){\r\n    console.log(props.summary);\r\n    let content = null;\r\n    if (props.summary) {\r\n        let data = props.summary.Countries[104];\r\n        content =\r\n            <div className=\"row m-t-25\">\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewConfirmed}</h2>\r\n                                    <span>New Confirmed</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewDeaths}</h2>\r\n                                    <span>New Deaths</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.NewRecovered}</h2>\r\n                                    <span>New Recovered</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalConfirmed}</h2>\r\n                                    <span>Total Confirmed</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalDeaths}</h2>\r\n                                    <span>Total Death</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-lg-4\">\r\n                    <div className=\"overview-item overview-item--c1\">\r\n                        <div className=\"overview__inner\">\r\n                            <div className=\"overview-box clearfix\">\r\n                                <div className=\"text\">\r\n                                    <h2>{data.TotalRecovered}</h2>\r\n                                    <span>Total Recovered</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    }\r\n    return (\r\n        <div className=\"bg-gray-100\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import React from 'react'\nimport Loader from '../Components/Loader'\nimport ProductCard from '../Components/ProductCard'\nimport { useAxiosGet } from '../Hooks/HttpRequests'\nimport Cards from \"../Components/Cards\";\nimport axios from \"axios\";\nimport {Line} from \"react-chartjs-2\";\nimport Moment from 'react-moment';\n\nfunction Home(){\n    // Create your own Mock API: https://mockapi.io/\n    const url = `https://api.covid19api.com/summary`\n    const [chartData, setChartData] = React.useState({});\n    let products = useAxiosGet(url)\n    const chart = () => {\n        let day = [];\n        let cases = [];\n        axios\n            .get(\"https://api.covid19api.com/country/malaysia/status/confirmed?from=2020-01-25T00:00:00Z&to=2020-10-10T00:00:00Z\")\n            .then(res => {\n                let formattedDate;\n                res.data.map((item, i) => {\n                    // formattedDate = new Intl.DateTimeFormat(\"en-GB\", {\n                    //     year: \"numeric\",\n                    //     month: \"long\",\n                    //     day: \"2-digit\"\n                    // }).format(\"2020-09-05T00:00:00Z\");\n\n                    day.push(new Date(item.Date).toUTCString());\n                    // console.log(item.Date)\n                    console.log(new Date(item.Date).toUTCString());\n                    console.log(item.Date);\n                    cases.push(item.Cases);\n                })\n                // for (const dataObj of res.data.data) {\n                //     day.push(parseInt(dataObj.employee_salary));\n                //     cases.push(parseInt(dataObj.employee_age));\n                // }\n            })\n\n        setChartData({\n            labels: day,\n            datasets: [\n                {\n                    label: \"Total Confirmed cases\",\n                    data: cases,\n                    backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n                    borderWidth: 4\n                }\n            ]\n        });\n    }\n\n    React.useEffect(() => {\n        chart();\n    }, []);\n\n    let content = null\n\n    if(products.error){\n        content = <div>\n            <div className=\"bg-blue-300 mb-2 p-3\">\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\n            </div>\n            <div className=\"bg-red-300 p-3\">\n                There was an error please refresh or try again later.\n            </div>\n        </div>\n    }\n\n    if(products.loading){\n        content = <Loader></Loader>\n    }\n\n    if(products.data){\n        console.log(products.data)\n        content =\n            <>\n                <div className=\"container\">\n                    <Cards summary={products.data}/>\n                </div>\n                <div>\n                    <Line data={chartData}/>\n                </div>\n            </>\n    }\n\n    if(products.data){\n        // content =\n            // products.data.map((product) =>\n            //     <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\n            //         <ProductCard\n            //             product={product}\n            //         />\n            //     </div>\n            // )\n    }\n\n    return (\n        <div>\n            { content }\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\nfunction About(){\n    return (\n        <div className=\"overview-item--c1\">\n            <h1 className=\"font-bold text-2xl mb-3\">About us</h1>\n            <p>\n                This is the about page content.\n            </p>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport Loader from '../Components/Loader'\nimport { useAxiosGet } from '../Hooks/HttpRequests'\n\nfunction Product(){\n    const { id } = useParams()\n    // Create your own Mock API: https://mockapi.io/\n    const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products/${id}`\n    \n    let product = useAxiosGet(url)\n\n    let content = null\n\n    if(product.error){\n        content = <div>\n            <div className=\"bg-blue-300 mb-2 p-3\">\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\n            </div>\n            <div className=\"bg-red-300 p-3\">\n                There was an error please refresh or try again later.\n            </div>\n        </div>\n    }\n\n    if(product.loading){\n        content = <Loader></Loader>\n    }\n\n    if(product.data){\n        content = \n        <div>\n            <h1 className=\"text-2xl font-bold mb-3\">\n                {product.data.name}\n            </h1>\n            <div>\n                <img\n                    src={product.data.images[0].imageUrl}\n                    alt={product.data.name}\n                />\n            </div>\n            <div className=\"font-bold text-xl mb-3\">\n                $ {product.data.price}\n            </div>\n            <div>\n                {product.data.description}\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"container mx-auto\">\n            {content}\n        </div>\n    )\n}\n\nexport default Product","import React from 'react'\r\nimport {useAxiosGet} from \"../Hooks/HttpRequests\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Overview() {\r\n    const url = \"https://api.covid19api.com/summary\";\r\n    const [chartData, setChartData] = React.useState({});\r\n    const [employeeSalary, setEmployeeSalary] = React.useState([]);\r\n    const [employeeAge, setEmployeeAge] = React.useState([]);\r\n    let graphData = useAxiosGet(\"https://api.covid19api.com/dayone/country/malaysia/status/confirmed/live\");\r\n\r\n    const chart = () => {\r\n        let day = [];\r\n        let cases = [];\r\n        axios\r\n            .get(\"https://api.covid19api.com/country/malaysia/status/confirmed?from=2020-01-25T00:00:00Z&to=2020-10-10T00:00:00Z\")\r\n            .then(res => {\r\n                res.data.map((item, i) => {\r\n                    day.push(item.Date);\r\n                    cases.push(item.Cases);\r\n\r\n\r\n                })\r\n                // for (const dataObj of res.data.data) {\r\n                //     day.push(parseInt(dataObj.employee_salary));\r\n                //     cases.push(parseInt(dataObj.employee_age));\r\n                // }\r\n            })\r\n\r\n        setChartData({\r\n            labels: day,\r\n            datasets: [\r\n                {\r\n                    label: \"Confirmed cases\",\r\n                    data: cases,\r\n                    backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\r\n                    borderWidth: 4\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        chart();\r\n    }, []);\r\n\r\n\r\n    let summary = useAxiosGet(url)\r\n    console.log(summary)\r\n    let content = null\r\n\r\n    if(summary.error){\r\n        content = <div>\r\n                    <div className=\"bg-blue-300 mb-2 p-3\">\r\n                        If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n                    </div>\r\n                    <div className=\"bg-red-300 p-3\">\r\n                        There was an error please refresh or try again later.\r\n                    </div>\r\n                </div>\r\n    }\r\n\r\n    if(summary.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(summary.data){\r\n        content =\r\n            <div className=\"container mx-auto\">\r\n                <div>Global</div>\r\n                <div>New Confirmed : {summary.data.Global.NewConfirmed}</div>\r\n                <div>New Deaths : {summary.data.Global.NewDeaths}</div>\r\n                <div>New Recovered : {summary.data.Global.NewRecovered}</div>\r\n                <div>Total Confirmed : {summary.data.Global.TotalConfirmed}</div>\r\n                <div>Total Deaths : {summary.data.Global.TotalDeaths}</div>\r\n                <div>Total Recovered : {summary.data.Global.TotalRecovered}</div>\r\n\r\n                <div>Malaysia</div>\r\n                <div>New Confirmed : {summary.data.Countries[104].NewConfirmed}</div>\r\n                <div>New Deaths : {summary.data.Countries[104].NewDeaths}</div>\r\n                <div>New Recovered : {summary.data.Countries[104].NewRecovered}</div>\r\n                <div>Total Confirmed : {summary.data.Countries[104].TotalConfirmed}</div>\r\n                <div>Total Deaths : {summary.data.Countries[104].TotalDeaths}</div>\r\n                <div>Total Recovered : {summary.data.Countries[104].TotalRecovered}</div>\r\n            <div>\r\n                <Line data={chartData}/>\r\n            </div>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview","import React from 'react'\r\nimport {useAxiosGet} from \"../Hooks/HttpRequests\";\r\nimport Loader from \"../Components/Loader\";\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\nimport MapStyles from \"../Components/MapStyles\";\r\nimport { Marker } from '@react-google-maps/api';\r\n\r\nfunction Map() {\r\n    const containerStyle = {\r\n        width: '90vw',\r\n        height: '90vh'\r\n    };\r\n\r\n    const center = {\r\n        lat: 4.2105,\r\n        lng: 101.9758\r\n    };\r\n\r\n    const position = {\r\n        lat: 3.1390,\r\n        lng: 101.6869\r\n    }\r\n\r\n    const options = {\r\n        styles : MapStyles,\r\n        disableDefaultUI: true,\r\n        zoomControl: true\r\n    }\r\n\r\n    const url = \"https://api.covid19api.com/country/malaysia/status/confirmed/live?from=2020-03-01T00:00:00Z&to=2020-04-10T00:00:00Z\";\r\n\r\n    let summary = useAxiosGet(url)\r\n    console.log(summary)\r\n    let content = null\r\n\r\n    const [map, setMap] = React.useState(null)\r\n\r\n    const onLoad = React.useCallback(function callback(map) {\r\n        // const bounds = new window.google.maps.LatLngBounds();\r\n        // map.fitBounds(bounds);\r\n        setMap(map)\r\n    }, [])\r\n\r\n    const onUnmount = React.useCallback(function callback(map) {\r\n        setMap(null)\r\n    }, [])\r\n\r\n    const [markers, setMarkers] = React.useState([]);\r\n    const onMapClick = React.useCallback((e) => {\r\n        setMarkers((current) => [\r\n            ...current,\r\n            {\r\n                lat: e.latLng.lat(),\r\n                lng: e.latLng.lng(),\r\n                time: new Date(),\r\n            },\r\n        ]);\r\n    }, []);\r\n\r\n    React.useState(() => {\r\n        setMarkers( () => [\r\n            {\r\n                lat: 3.8126,\r\n                lng: 103.3256\r\n            },\r\n            {\r\n                lat: 2.1896,\r\n                lng: 102.2501\r\n            },\r\n            {\r\n                lat: 1.4854,\r\n                lng: 103.7618\r\n            },\r\n            {\r\n                lat: 5.3117,\r\n                lng: 103.1324\r\n            }]);\r\n    });\r\n\r\n\r\n\r\n    // if(summary.error){\r\n    //     content = <div>\r\n    //         <div className=\"bg-blue-300 mb-2 p-3\">\r\n    //             If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n    //         </div>\r\n    //         <div className=\"bg-red-300 p-3\">\r\n    //             There was an error please refresh or try again later.\r\n    //         </div>\r\n    //     </div>\r\n    // }\r\n\r\n    // if(summary.loading){\r\n    //     content = <Loader></Loader>\r\n    // }\r\n\r\n    console.log(summary.data)\r\n    if(summary.data){\r\n        content =\r\n            <div className=\"container mx-auto\">\r\n            <LoadScript\r\n                googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\r\n            >\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={8}\r\n                    onLoad={onLoad}\r\n                    onUnmount={onUnmount}\r\n                    // options={options}\r\n                >\r\n                    { /* Child components, such as markers, info windows, etc. */ }\r\n                    {/*<Marker*/}\r\n                    {/*    onLoad={onLoad}*/}\r\n                    {/*    position={position}*/}\r\n                    {/*/>*/}\r\n\r\n                    {summary.data.map((marker) => (\r\n                        <Marker\r\n                            key={`${marker.Lat}-${marker.Lon}-${marker.Date}`}\r\n                            position={{ lat: Number(marker.Lat), lng: Number(marker.Lon) }}\r\n                            onClick={() => {\r\n                                // setSelected(marker);\r\n                            }}\r\n                            onLoad={onLoad}\r\n                        />\r\n                    ))}\r\n\r\n                </GoogleMap>\r\n            </LoadScript>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport Home from './Views/Home'\nimport About from './Views/About'\nimport Product from './Views/Product'\nimport Overview from \"./Views/Overview\";\nimport Map from \"./Views/Map\";\n\nfunction App() {\n  return (\n    <div className=\"relative pb-10 min-h-screen\">\n      <Router>\n        \n        <Header />\n\n        <div className=\"p-3\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/products/:id\">\n            <Product />\n          </Route>\n          <Route path=\"/overview\">\n            <Overview />\n          </Route>\n          <Route path=\"/map\">\n            <Map />\n          </Route>\n        </Switch>\n        </div>\n\n        <Footer />\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport './theme.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}